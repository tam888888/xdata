(()=>{"use strict";var e={795:(e,t,s)=>{const{EMPTY_BUFFER:r}=s(197),o=Buffer[Symbol.species];function i(e,t,s,r,o){for(let i=0;i<o;i++)s[r+i]=e[i]^t[3&i]}function n(e,t){for(let s=0;s<e.length;s++)e[s]^=t[3&s]}if(e.exports={concat:function(e,t){if(0===e.length)return r;if(1===e.length)return e[0];const s=Buffer.allocUnsafe(t);let i=0;for(let t=0;t<e.length;t++){const r=e[t];s.set(r,i),i+=r.length}return i<t?new o(s.buffer,s.byteOffset,i):s},mask:i,toArrayBuffer:function(e){return e.length===e.buffer.byteLength?e.buffer:e.buffer.slice(e.byteOffset,e.byteOffset+e.length)},toBuffer:function e(t){if(e.readOnly=!0,Buffer.isBuffer(t))return t;let s;return t instanceof ArrayBuffer?s=new o(t):ArrayBuffer.isView(t)?s=new o(t.buffer,t.byteOffset,t.byteLength):(s=Buffer.from(t),e.readOnly=!1),s},unmask:n},!process.env.WS_NO_BUFFER_UTIL)try{const t=s(Object(function(){var e=new Error("Cannot find module 'bufferutil'");throw e.code="MODULE_NOT_FOUND",e}()));e.exports.mask=function(e,s,r,o,n){n<48?i(e,s,r,o,n):t.mask(e,s,r,o,n)},e.exports.unmask=function(e,s){e.length<32?n(e,s):t.unmask(e,s)}}catch(e){}},197:e=>{const t=["nodebuffer","arraybuffer","fragments"],s="undefined"!=typeof Blob;s&&t.push("blob"),e.exports={BINARY_TYPES:t,EMPTY_BUFFER:Buffer.alloc(0),GUID:"258EAFA5-E914-47DA-95CA-C5AB0DC85B11",hasBlob:s,kForOnEventAttribute:Symbol("kIsForOnEventAttribute"),kListener:Symbol("kListener"),kStatusCode:Symbol("status-code"),kWebSocket:Symbol("websocket"),NOOP:()=>{}}},365:(e,t,s)=>{const{kForOnEventAttribute:r,kListener:o}=s(197),i=Symbol("kCode"),n=Symbol("kData"),a=Symbol("kError"),c=Symbol("kMessage"),h=Symbol("kReason"),l=Symbol("kTarget"),d=Symbol("kType"),f=Symbol("kWasClean");class S{constructor(e){this[l]=null,this[d]=e}get target(){return this[l]}get type(){return this[d]}}Object.defineProperty(S.prototype,"target",{enumerable:!0}),Object.defineProperty(S.prototype,"type",{enumerable:!0});class u extends S{constructor(e,t={}){super(e),this[i]=void 0===t.code?0:t.code,this[h]=void 0===t.reason?"":t.reason,this[f]=void 0!==t.wasClean&&t.wasClean}get code(){return this[i]}get reason(){return this[h]}get wasClean(){return this[f]}}Object.defineProperty(u.prototype,"code",{enumerable:!0}),Object.defineProperty(u.prototype,"reason",{enumerable:!0}),Object.defineProperty(u.prototype,"wasClean",{enumerable:!0});class _ extends S{constructor(e,t={}){super(e),this[a]=void 0===t.error?null:t.error,this[c]=void 0===t.message?"":t.message}get error(){return this[a]}get message(){return this[c]}}Object.defineProperty(_.prototype,"error",{enumerable:!0}),Object.defineProperty(_.prototype,"message",{enumerable:!0});class C extends S{constructor(e,t={}){super(e),this[n]=void 0===t.data?null:t.data}get data(){return this[n]}}Object.defineProperty(C.prototype,"data",{enumerable:!0});const p={addEventListener(e,t,s={}){for(const i of this.listeners(e))if(!s[r]&&i[o]===t&&!i[r])return;let i;if("message"===e)i=function(e,s){const r=new C("message",{data:s?e:e.toString()});r[l]=this,T(t,this,r)};else if("close"===e)i=function(e,s){const r=new u("close",{code:e,reason:s.toString(),wasClean:this._closeFrameReceived&&this._closeFrameSent});r[l]=this,T(t,this,r)};else if("error"===e)i=function(e){const s=new _("error",{error:e,message:e.message});s[l]=this,T(t,this,s)};else{if("open"!==e)return;i=function(){const e=new S("open");e[l]=this,T(t,this,e)}}i[r]=!!s[r],i[o]=t,s.once?this.once(e,i):this.on(e,i)},removeEventListener(e,t){for(const s of this.listeners(e))if(s[o]===t&&!s[r]){this.removeListener(e,s);break}}};function T(e,t,s){"object"==typeof e&&e.handleEvent?e.handleEvent.call(e,s):e.call(t,s)}e.exports={CloseEvent:u,ErrorEvent:_,Event:S,EventTarget:p,MessageEvent:C}},769:(e,t,s)=>{const{tokenChars:r}=s(767);function o(e,t,s){void 0===e[t]?e[t]=[s]:e[t].push(s)}e.exports={format:function(e){return Object.keys(e).map((t=>{let s=e[t];return Array.isArray(s)||(s=[s]),s.map((e=>[t].concat(Object.keys(e).map((t=>{let s=e[t];return Array.isArray(s)||(s=[s]),s.map((e=>!0===e?t:`${t}=${e}`)).join("; ")}))).join("; "))).join(", ")})).join(", ")},parse:function(e){const t=Object.create(null);let s,i,n=Object.create(null),a=!1,c=!1,h=!1,l=-1,d=-1,f=-1,S=0;for(;S<e.length;S++)if(d=e.charCodeAt(S),void 0===s)if(-1===f&&1===r[d])-1===l&&(l=S);else if(0===S||32!==d&&9!==d){if(59!==d&&44!==d)throw new SyntaxError(`Unexpected character at index ${S}`);{if(-1===l)throw new SyntaxError(`Unexpected character at index ${S}`);-1===f&&(f=S);const r=e.slice(l,f);44===d?(o(t,r,n),n=Object.create(null)):s=r,l=f=-1}}else-1===f&&-1!==l&&(f=S);else if(void 0===i)if(-1===f&&1===r[d])-1===l&&(l=S);else if(32===d||9===d)-1===f&&-1!==l&&(f=S);else if(59===d||44===d){if(-1===l)throw new SyntaxError(`Unexpected character at index ${S}`);-1===f&&(f=S),o(n,e.slice(l,f),!0),44===d&&(o(t,s,n),n=Object.create(null),s=void 0),l=f=-1}else{if(61!==d||-1===l||-1!==f)throw new SyntaxError(`Unexpected character at index ${S}`);i=e.slice(l,S),l=f=-1}else if(c){if(1!==r[d])throw new SyntaxError(`Unexpected character at index ${S}`);-1===l?l=S:a||(a=!0),c=!1}else if(h)if(1===r[d])-1===l&&(l=S);else if(34===d&&-1!==l)h=!1,f=S;else{if(92!==d)throw new SyntaxError(`Unexpected character at index ${S}`);c=!0}else if(34===d&&61===e.charCodeAt(S-1))h=!0;else if(-1===f&&1===r[d])-1===l&&(l=S);else if(-1===l||32!==d&&9!==d){if(59!==d&&44!==d)throw new SyntaxError(`Unexpected character at index ${S}`);{if(-1===l)throw new SyntaxError(`Unexpected character at index ${S}`);-1===f&&(f=S);let r=e.slice(l,f);a&&(r=r.replace(/\\/g,""),a=!1),o(n,i,r),44===d&&(o(t,s,n),n=Object.create(null),s=void 0),i=void 0,l=f=-1}}else-1===f&&(f=S);if(-1===l||h||32===d||9===d)throw new SyntaxError("Unexpected end of input");-1===f&&(f=S);const u=e.slice(l,f);return void 0===s?o(t,u,n):(void 0===i?o(n,u,!0):o(n,i,a?u.replace(/\\/g,""):u),o(t,s,n)),t}}},802:e=>{const t=Symbol("kDone"),s=Symbol("kRun");e.exports=class{constructor(e){this[t]=()=>{this.pending--,this[s]()},this.concurrency=e||1/0,this.jobs=[],this.pending=0}add(e){this.jobs.push(e),this[s]()}[s](){if(this.pending!==this.concurrency&&this.jobs.length){const e=this.jobs.shift();this.pending++,e(this[t])}}}},984:(e,t,s)=>{const r=s(796),o=s(795),i=s(802),{kStatusCode:n}=s(197),a=Buffer[Symbol.species],c=Buffer.from([0,0,255,255]),h=Symbol("permessage-deflate"),l=Symbol("total-length"),d=Symbol("callback"),f=Symbol("buffers"),S=Symbol("error");let u;function _(e){this[f].push(e),this[l]+=e.length}function C(e){this[l]+=e.length,this[h]._maxPayload<1||this[l]<=this[h]._maxPayload?this[f].push(e):(this[S]=new RangeError("Max payload size exceeded"),this[S].code="WS_ERR_UNSUPPORTED_MESSAGE_LENGTH",this[S][n]=1009,this.removeListener("data",C),this.reset())}function p(e){this[h]._inflate=null,this[S]?this[d](this[S]):(e[n]=1007,this[d](e))}e.exports=class{constructor(e,t,s){if(this._maxPayload=0|s,this._options=e||{},this._threshold=void 0!==this._options.threshold?this._options.threshold:1024,this._isServer=!!t,this._deflate=null,this._inflate=null,this.params=null,!u){const e=void 0!==this._options.concurrencyLimit?this._options.concurrencyLimit:10;u=new i(e)}}static get extensionName(){return"permessage-deflate"}offer(){const e={};return this._options.serverNoContextTakeover&&(e.server_no_context_takeover=!0),this._options.clientNoContextTakeover&&(e.client_no_context_takeover=!0),this._options.serverMaxWindowBits&&(e.server_max_window_bits=this._options.serverMaxWindowBits),this._options.clientMaxWindowBits?e.client_max_window_bits=this._options.clientMaxWindowBits:null==this._options.clientMaxWindowBits&&(e.client_max_window_bits=!0),e}accept(e){return e=this.normalizeParams(e),this.params=this._isServer?this.acceptAsServer(e):this.acceptAsClient(e),this.params}cleanup(){if(this._inflate&&(this._inflate.close(),this._inflate=null),this._deflate){const e=this._deflate[d];this._deflate.close(),this._deflate=null,e&&e(new Error("The deflate stream was closed while data was being processed"))}}acceptAsServer(e){const t=this._options,s=e.find((e=>!(!1===t.serverNoContextTakeover&&e.server_no_context_takeover||e.server_max_window_bits&&(!1===t.serverMaxWindowBits||"number"==typeof t.serverMaxWindowBits&&t.serverMaxWindowBits>e.server_max_window_bits)||"number"==typeof t.clientMaxWindowBits&&!e.client_max_window_bits)));if(!s)throw new Error("None of the extension offers can be accepted");return t.serverNoContextTakeover&&(s.server_no_context_takeover=!0),t.clientNoContextTakeover&&(s.client_no_context_takeover=!0),"number"==typeof t.serverMaxWindowBits&&(s.server_max_window_bits=t.serverMaxWindowBits),"number"==typeof t.clientMaxWindowBits?s.client_max_window_bits=t.clientMaxWindowBits:!0!==s.client_max_window_bits&&!1!==t.clientMaxWindowBits||delete s.client_max_window_bits,s}acceptAsClient(e){const t=e[0];if(!1===this._options.clientNoContextTakeover&&t.client_no_context_takeover)throw new Error('Unexpected parameter "client_no_context_takeover"');if(t.client_max_window_bits){if(!1===this._options.clientMaxWindowBits||"number"==typeof this._options.clientMaxWindowBits&&t.client_max_window_bits>this._options.clientMaxWindowBits)throw new Error('Unexpected or invalid parameter "client_max_window_bits"')}else"number"==typeof this._options.clientMaxWindowBits&&(t.client_max_window_bits=this._options.clientMaxWindowBits);return t}normalizeParams(e){return e.forEach((e=>{Object.keys(e).forEach((t=>{let s=e[t];if(s.length>1)throw new Error(`Parameter "${t}" must have only a single value`);if(s=s[0],"client_max_window_bits"===t){if(!0!==s){const e=+s;if(!Number.isInteger(e)||e<8||e>15)throw new TypeError(`Invalid value for parameter "${t}": ${s}`);s=e}else if(!this._isServer)throw new TypeError(`Invalid value for parameter "${t}": ${s}`)}else if("server_max_window_bits"===t){const e=+s;if(!Number.isInteger(e)||e<8||e>15)throw new TypeError(`Invalid value for parameter "${t}": ${s}`);s=e}else{if("client_no_context_takeover"!==t&&"server_no_context_takeover"!==t)throw new Error(`Unknown parameter "${t}"`);if(!0!==s)throw new TypeError(`Invalid value for parameter "${t}": ${s}`)}e[t]=s}))})),e}decompress(e,t,s){u.add((r=>{this._decompress(e,t,((e,t)=>{r(),s(e,t)}))}))}compress(e,t,s){u.add((r=>{this._compress(e,t,((e,t)=>{r(),s(e,t)}))}))}_decompress(e,t,s){const i=this._isServer?"client":"server";if(!this._inflate){const e=`${i}_max_window_bits`,t="number"!=typeof this.params[e]?r.Z_DEFAULT_WINDOWBITS:this.params[e];this._inflate=r.createInflateRaw({...this._options.zlibInflateOptions,windowBits:t}),this._inflate[h]=this,this._inflate[l]=0,this._inflate[f]=[],this._inflate.on("error",p),this._inflate.on("data",C)}this._inflate[d]=s,this._inflate.write(e),t&&this._inflate.write(c),this._inflate.flush((()=>{const e=this._inflate[S];if(e)return this._inflate.close(),this._inflate=null,void s(e);const r=o.concat(this._inflate[f],this._inflate[l]);this._inflate._readableState.endEmitted?(this._inflate.close(),this._inflate=null):(this._inflate[l]=0,this._inflate[f]=[],t&&this.params[`${i}_no_context_takeover`]&&this._inflate.reset()),s(null,r)}))}_compress(e,t,s){const i=this._isServer?"server":"client";if(!this._deflate){const e=`${i}_max_window_bits`,t="number"!=typeof this.params[e]?r.Z_DEFAULT_WINDOWBITS:this.params[e];this._deflate=r.createDeflateRaw({...this._options.zlibDeflateOptions,windowBits:t}),this._deflate[l]=0,this._deflate[f]=[],this._deflate.on("data",_)}this._deflate[d]=s,this._deflate.write(e),this._deflate.flush(r.Z_SYNC_FLUSH,(()=>{if(!this._deflate)return;let e=o.concat(this._deflate[f],this._deflate[l]);t&&(e=new a(e.buffer,e.byteOffset,e.length-4)),this._deflate[d]=null,this._deflate[l]=0,this._deflate[f]=[],t&&this.params[`${i}_no_context_takeover`]&&this._deflate.reset(),s(null,e)}))}}},126:(e,t,s)=>{const{Writable:r}=s(781),o=s(984),{BINARY_TYPES:i,EMPTY_BUFFER:n,kStatusCode:a,kWebSocket:c}=s(197),{concat:h,toArrayBuffer:l,unmask:d}=s(795),{isValidStatusCode:f,isValidUTF8:S}=s(767),u=Buffer[Symbol.species];e.exports=class extends r{constructor(e={}){super(),this._allowSynchronousEvents=void 0===e.allowSynchronousEvents||e.allowSynchronousEvents,this._binaryType=e.binaryType||i[0],this._extensions=e.extensions||{},this._isServer=!!e.isServer,this._maxPayload=0|e.maxPayload,this._skipUTF8Validation=!!e.skipUTF8Validation,this[c]=void 0,this._bufferedBytes=0,this._buffers=[],this._compressed=!1,this._payloadLength=0,this._mask=void 0,this._fragmented=0,this._masked=!1,this._fin=!1,this._opcode=0,this._totalPayloadLength=0,this._messageLength=0,this._fragments=[],this._errored=!1,this._loop=!1,this._state=0}_write(e,t,s){if(8===this._opcode&&0==this._state)return s();this._bufferedBytes+=e.length,this._buffers.push(e),this.startLoop(s)}consume(e){if(this._bufferedBytes-=e,e===this._buffers[0].length)return this._buffers.shift();if(e<this._buffers[0].length){const t=this._buffers[0];return this._buffers[0]=new u(t.buffer,t.byteOffset+e,t.length-e),new u(t.buffer,t.byteOffset,e)}const t=Buffer.allocUnsafe(e);do{const s=this._buffers[0],r=t.length-e;e>=s.length?t.set(this._buffers.shift(),r):(t.set(new Uint8Array(s.buffer,s.byteOffset,e),r),this._buffers[0]=new u(s.buffer,s.byteOffset+e,s.length-e)),e-=s.length}while(e>0);return t}startLoop(e){this._loop=!0;do{switch(this._state){case 0:this.getInfo(e);break;case 1:this.getPayloadLength16(e);break;case 2:this.getPayloadLength64(e);break;case 3:this.getMask();break;case 4:this.getData(e);break;case 5:case 6:return void(this._loop=!1)}}while(this._loop);this._errored||e()}getInfo(e){if(this._bufferedBytes<2)return void(this._loop=!1);const t=this.consume(2);if(0!=(48&t[0]))return void e(this.createError(RangeError,"RSV2 and RSV3 must be clear",!0,1002,"WS_ERR_UNEXPECTED_RSV_2_3"));const s=64==(64&t[0]);if(!s||this._extensions[o.extensionName]){if(this._fin=128==(128&t[0]),this._opcode=15&t[0],this._payloadLength=127&t[1],0===this._opcode){if(s)return void e(this.createError(RangeError,"RSV1 must be clear",!0,1002,"WS_ERR_UNEXPECTED_RSV_1"));if(!this._fragmented)return void e(this.createError(RangeError,"invalid opcode 0",!0,1002,"WS_ERR_INVALID_OPCODE"));this._opcode=this._fragmented}else if(1===this._opcode||2===this._opcode){if(this._fragmented)return void e(this.createError(RangeError,`invalid opcode ${this._opcode}`,!0,1002,"WS_ERR_INVALID_OPCODE"));this._compressed=s}else{if(!(this._opcode>7&&this._opcode<11))return void e(this.createError(RangeError,`invalid opcode ${this._opcode}`,!0,1002,"WS_ERR_INVALID_OPCODE"));if(!this._fin)return void e(this.createError(RangeError,"FIN must be set",!0,1002,"WS_ERR_EXPECTED_FIN"));if(s)return void e(this.createError(RangeError,"RSV1 must be clear",!0,1002,"WS_ERR_UNEXPECTED_RSV_1"));if(this._payloadLength>125||8===this._opcode&&1===this._payloadLength)return void e(this.createError(RangeError,`invalid payload length ${this._payloadLength}`,!0,1002,"WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH"))}if(this._fin||this._fragmented||(this._fragmented=this._opcode),this._masked=128==(128&t[1]),this._isServer){if(!this._masked)return void e(this.createError(RangeError,"MASK must be set",!0,1002,"WS_ERR_EXPECTED_MASK"))}else if(this._masked)return void e(this.createError(RangeError,"MASK must be clear",!0,1002,"WS_ERR_UNEXPECTED_MASK"));126===this._payloadLength?this._state=1:127===this._payloadLength?this._state=2:this.haveLength(e)}else e(this.createError(RangeError,"RSV1 must be clear",!0,1002,"WS_ERR_UNEXPECTED_RSV_1"))}getPayloadLength16(e){this._bufferedBytes<2?this._loop=!1:(this._payloadLength=this.consume(2).readUInt16BE(0),this.haveLength(e))}getPayloadLength64(e){if(this._bufferedBytes<8)return void(this._loop=!1);const t=this.consume(8),s=t.readUInt32BE(0);s>Math.pow(2,21)-1?e(this.createError(RangeError,"Unsupported WebSocket frame: payload length > 2^53 - 1",!1,1009,"WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH")):(this._payloadLength=s*Math.pow(2,32)+t.readUInt32BE(4),this.haveLength(e))}haveLength(e){this._payloadLength&&this._opcode<8&&(this._totalPayloadLength+=this._payloadLength,this._totalPayloadLength>this._maxPayload&&this._maxPayload>0)?e(this.createError(RangeError,"Max payload size exceeded",!1,1009,"WS_ERR_UNSUPPORTED_MESSAGE_LENGTH")):this._masked?this._state=3:this._state=4}getMask(){this._bufferedBytes<4?this._loop=!1:(this._mask=this.consume(4),this._state=4)}getData(e){let t=n;if(this._payloadLength){if(this._bufferedBytes<this._payloadLength)return void(this._loop=!1);t=this.consume(this._payloadLength),this._masked&&0!=(this._mask[0]|this._mask[1]|this._mask[2]|this._mask[3])&&d(t,this._mask)}if(this._opcode>7)this.controlMessage(t,e);else{if(this._compressed)return this._state=5,void this.decompress(t,e);t.length&&(this._messageLength=this._totalPayloadLength,this._fragments.push(t)),this.dataMessage(e)}}decompress(e,t){this._extensions[o.extensionName].decompress(e,this._fin,((e,s)=>{if(e)return t(e);if(s.length){if(this._messageLength+=s.length,this._messageLength>this._maxPayload&&this._maxPayload>0){const e=this.createError(RangeError,"Max payload size exceeded",!1,1009,"WS_ERR_UNSUPPORTED_MESSAGE_LENGTH");return void t(e)}this._fragments.push(s)}this.dataMessage(t),0===this._state&&this.startLoop(t)}))}dataMessage(e){if(!this._fin)return void(this._state=0);const t=this._messageLength,s=this._fragments;if(this._totalPayloadLength=0,this._messageLength=0,this._fragmented=0,this._fragments=[],2===this._opcode){let r;r="nodebuffer"===this._binaryType?h(s,t):"arraybuffer"===this._binaryType?l(h(s,t)):"blob"===this._binaryType?new Blob(s):s,this._allowSynchronousEvents?(this.emit("message",r,!0),this._state=0):(this._state=6,setImmediate((()=>{this.emit("message",r,!0),this._state=0,this.startLoop(e)})))}else{const r=h(s,t);if(!this._skipUTF8Validation&&!S(r)){const t=this.createError(Error,"invalid UTF-8 sequence",!0,1007,"WS_ERR_INVALID_UTF8");return void e(t)}5===this._state||this._allowSynchronousEvents?(this.emit("message",r,!1),this._state=0):(this._state=6,setImmediate((()=>{this.emit("message",r,!1),this._state=0,this.startLoop(e)})))}}controlMessage(e,t){if(8!==this._opcode)this._allowSynchronousEvents?(this.emit(9===this._opcode?"ping":"pong",e),this._state=0):(this._state=6,setImmediate((()=>{this.emit(9===this._opcode?"ping":"pong",e),this._state=0,this.startLoop(t)})));else{if(0===e.length)this._loop=!1,this.emit("conclude",1005,n),this.end();else{const s=e.readUInt16BE(0);if(!f(s)){const e=this.createError(RangeError,`invalid status code ${s}`,!0,1002,"WS_ERR_INVALID_CLOSE_CODE");return void t(e)}const r=new u(e.buffer,e.byteOffset+2,e.length-2);if(!this._skipUTF8Validation&&!S(r)){const e=this.createError(Error,"invalid UTF-8 sequence",!0,1007,"WS_ERR_INVALID_UTF8");return void t(e)}this._loop=!1,this.emit("conclude",s,r),this.end()}this._state=0}}createError(e,t,s,r,o){this._loop=!1,this._errored=!0;const i=new e(s?`Invalid WebSocket frame: ${t}`:t);return Error.captureStackTrace(i,this.createError),i.code=o,i[a]=r,i}}},282:(e,t,s)=>{const{Duplex:r}=s(781),{randomFillSync:o}=s(113),i=s(984),{EMPTY_BUFFER:n,kWebSocket:a,NOOP:c}=s(197),{isBlob:h,isValidStatusCode:l}=s(767),{mask:d,toBuffer:f}=s(795),S=Symbol("kByteLength"),u=Buffer.alloc(4),_=8192;let C,p=_;class T{constructor(e,t,s){this._extensions=t||{},s&&(this._generateMask=s,this._maskBuffer=Buffer.alloc(4)),this._socket=e,this._firstFragment=!0,this._compress=!1,this._bufferedBytes=0,this._queue=[],this._state=0,this.onerror=c,this[a]=void 0}static frame(e,t){let s,r,i=!1,n=2,a=!1;t.mask&&(s=t.maskBuffer||u,t.generateMask?t.generateMask(s):(p===_&&(void 0===C&&(C=Buffer.alloc(_)),o(C,0,_),p=0),s[0]=C[p++],s[1]=C[p++],s[2]=C[p++],s[3]=C[p++]),a=0==(s[0]|s[1]|s[2]|s[3]),n=6),"string"==typeof e?r=t.mask&&!a||void 0===t[S]?(e=Buffer.from(e)).length:t[S]:(r=e.length,i=t.mask&&t.readOnly&&!a);let c=r;r>=65536?(n+=8,c=127):r>125&&(n+=2,c=126);const h=Buffer.allocUnsafe(i?r+n:n);return h[0]=t.fin?128|t.opcode:t.opcode,t.rsv1&&(h[0]|=64),h[1]=c,126===c?h.writeUInt16BE(r,2):127===c&&(h[2]=h[3]=0,h.writeUIntBE(r,4,6)),t.mask?(h[1]|=128,h[n-4]=s[0],h[n-3]=s[1],h[n-2]=s[2],h[n-1]=s[3],a?[h,e]:i?(d(e,s,h,n,r),[h]):(d(e,s,e,0,r),[h,e])):[h,e]}close(e,t,s,r){let o;if(void 0===e)o=n;else{if("number"!=typeof e||!l(e))throw new TypeError("First argument must be a valid error code number");if(void 0!==t&&t.length){const s=Buffer.byteLength(t);if(s>123)throw new RangeError("The message must not be greater than 123 bytes");o=Buffer.allocUnsafe(2+s),o.writeUInt16BE(e,0),"string"==typeof t?o.write(t,2):o.set(t,2)}else o=Buffer.allocUnsafe(2),o.writeUInt16BE(e,0)}const i={[S]:o.length,fin:!0,generateMask:this._generateMask,mask:s,maskBuffer:this._maskBuffer,opcode:8,readOnly:!1,rsv1:!1};0!==this._state?this.enqueue([this.dispatch,o,!1,i,r]):this.sendFrame(T.frame(o,i),r)}ping(e,t,s){let r,o;if("string"==typeof e?(r=Buffer.byteLength(e),o=!1):h(e)?(r=e.size,o=!1):(r=(e=f(e)).length,o=f.readOnly),r>125)throw new RangeError("The data size must not be greater than 125 bytes");const i={[S]:r,fin:!0,generateMask:this._generateMask,mask:t,maskBuffer:this._maskBuffer,opcode:9,readOnly:o,rsv1:!1};h(e)?0!==this._state?this.enqueue([this.getBlobData,e,!1,i,s]):this.getBlobData(e,!1,i,s):0!==this._state?this.enqueue([this.dispatch,e,!1,i,s]):this.sendFrame(T.frame(e,i),s)}pong(e,t,s){let r,o;if("string"==typeof e?(r=Buffer.byteLength(e),o=!1):h(e)?(r=e.size,o=!1):(r=(e=f(e)).length,o=f.readOnly),r>125)throw new RangeError("The data size must not be greater than 125 bytes");const i={[S]:r,fin:!0,generateMask:this._generateMask,mask:t,maskBuffer:this._maskBuffer,opcode:10,readOnly:o,rsv1:!1};h(e)?0!==this._state?this.enqueue([this.getBlobData,e,!1,i,s]):this.getBlobData(e,!1,i,s):0!==this._state?this.enqueue([this.dispatch,e,!1,i,s]):this.sendFrame(T.frame(e,i),s)}send(e,t,s){const r=this._extensions[i.extensionName];let o,n,a=t.binary?2:1,c=t.compress;"string"==typeof e?(o=Buffer.byteLength(e),n=!1):h(e)?(o=e.size,n=!1):(o=(e=f(e)).length,n=f.readOnly),this._firstFragment?(this._firstFragment=!1,c&&r&&r.params[r._isServer?"server_no_context_takeover":"client_no_context_takeover"]&&(c=o>=r._threshold),this._compress=c):(c=!1,a=0),t.fin&&(this._firstFragment=!0);const l={[S]:o,fin:t.fin,generateMask:this._generateMask,mask:t.mask,maskBuffer:this._maskBuffer,opcode:a,readOnly:n,rsv1:c};h(e)?0!==this._state?this.enqueue([this.getBlobData,e,this._compress,l,s]):this.getBlobData(e,this._compress,l,s):0!==this._state?this.enqueue([this.dispatch,e,this._compress,l,s]):this.dispatch(e,this._compress,l,s)}getBlobData(e,t,s,r){this._bufferedBytes+=s[S],this._state=2,e.arrayBuffer().then((e=>{if(this._socket.destroyed){const e=new Error("The socket was closed while the blob was being read");return void process.nextTick(m,this,e,r)}this._bufferedBytes-=s[S];const o=f(e);t?this.dispatch(o,t,s,r):(this._state=0,this.sendFrame(T.frame(o,s),r),this.dequeue())})).catch((e=>{process.nextTick(P,this,e,r)}))}dispatch(e,t,s,r){if(!t)return void this.sendFrame(T.frame(e,s),r);const o=this._extensions[i.extensionName];this._bufferedBytes+=s[S],this._state=1,o.compress(e,s.fin,((e,t)=>{this._socket.destroyed?m(this,new Error("The socket was closed while data was being compressed"),r):(this._bufferedBytes-=s[S],this._state=0,s.readOnly=!1,this.sendFrame(T.frame(t,s),r),this.dequeue())}))}dequeue(){for(;0===this._state&&this._queue.length;){const e=this._queue.shift();this._bufferedBytes-=e[3][S],Reflect.apply(e[0],this,e.slice(1))}}enqueue(e){this._bufferedBytes+=e[3][S],this._queue.push(e)}sendFrame(e,t){2===e.length?(this._socket.cork(),this._socket.write(e[0]),this._socket.write(e[1],t),this._socket.uncork()):this._socket.write(e[0],t)}}function m(e,t,s){"function"==typeof s&&s(t);for(let s=0;s<e._queue.length;s++){const r=e._queue[s],o=r[r.length-1];"function"==typeof o&&o(t)}}function P(e,t,s){m(e,t,s),e.onerror(t)}e.exports=T},254:(e,t,s)=>{s(545);const{Duplex:r}=s(781);function o(e){e.emit("close")}function i(){!this.destroyed&&this._writableState.finished&&this.destroy()}function n(e){this.removeListener("error",n),this.destroy(),0===this.listenerCount("error")&&this.emit("error",e)}e.exports=function(e,t){let s=!0;const a=new r({...t,autoDestroy:!1,emitClose:!1,objectMode:!1,writableObjectMode:!1});return e.on("message",(function(t,s){const r=!s&&a._readableState.objectMode?t.toString():t;a.push(r)||e.pause()})),e.once("error",(function(e){a.destroyed||(s=!1,a.destroy(e))})),e.once("close",(function(){a.destroyed||a.push(null)})),a._destroy=function(t,r){if(e.readyState===e.CLOSED)return r(t),void process.nextTick(o,a);let i=!1;e.once("error",(function(e){i=!0,r(e)})),e.once("close",(function(){i||r(t),process.nextTick(o,a)})),s&&e.terminate()},a._final=function(t){e.readyState!==e.CONNECTING?null!==e._socket&&(e._socket._writableState.finished?(t(),a._readableState.endEmitted&&a.destroy()):(e._socket.once("finish",(function(){t()})),e.close())):e.once("open",(function(){a._final(t)}))},a._read=function(){e.isPaused&&e.resume()},a._write=function(t,s,r){e.readyState!==e.CONNECTING?e.send(t,r):e.once("open",(function(){a._write(t,s,r)}))},a.on("end",i),a.on("error",n),a}},873:(e,t,s)=>{const{tokenChars:r}=s(767);e.exports={parse:function(e){const t=new Set;let s=-1,o=-1,i=0;for(;i<e.length;i++){const n=e.charCodeAt(i);if(-1===o&&1===r[n])-1===s&&(s=i);else if(0===i||32!==n&&9!==n){if(44!==n)throw new SyntaxError(`Unexpected character at index ${i}`);{if(-1===s)throw new SyntaxError(`Unexpected character at index ${i}`);-1===o&&(o=i);const r=e.slice(s,o);if(t.has(r))throw new SyntaxError(`The "${r}" subprotocol is duplicated`);t.add(r),s=o=-1}}else-1===o&&-1!==s&&(o=i)}if(-1===s||-1!==o)throw new SyntaxError("Unexpected end of input");const n=e.slice(s,i);if(t.has(n))throw new SyntaxError(`The "${n}" subprotocol is duplicated`);return t.add(n),t}}},767:(e,t,s)=>{const{isUtf8:r}=s(300),{hasBlob:o}=s(197);function i(e){const t=e.length;let s=0;for(;s<t;)if(0==(128&e[s]))s++;else if(192==(224&e[s])){if(s+1===t||128!=(192&e[s+1])||192==(254&e[s]))return!1;s+=2}else if(224==(240&e[s])){if(s+2>=t||128!=(192&e[s+1])||128!=(192&e[s+2])||224===e[s]&&128==(224&e[s+1])||237===e[s]&&160==(224&e[s+1]))return!1;s+=3}else{if(240!=(248&e[s]))return!1;if(s+3>=t||128!=(192&e[s+1])||128!=(192&e[s+2])||128!=(192&e[s+3])||240===e[s]&&128==(240&e[s+1])||244===e[s]&&e[s+1]>143||e[s]>244)return!1;s+=4}return!0}if(e.exports={isBlob:function(e){return o&&"object"==typeof e&&"function"==typeof e.arrayBuffer&&"string"==typeof e.type&&"function"==typeof e.stream&&("Blob"===e[Symbol.toStringTag]||"File"===e[Symbol.toStringTag])},isValidStatusCode:function(e){return e>=1e3&&e<=1014&&1004!==e&&1005!==e&&1006!==e||e>=3e3&&e<=4999},isValidUTF8:i,tokenChars:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1,0,0,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0]},r)e.exports.isValidUTF8=function(e){return e.length<24?i(e):r(e)};else if(!process.env.WS_NO_UTF_8_VALIDATE)try{const t=s(Object(function(){var e=new Error("Cannot find module 'utf-8-validate'");throw e.code="MODULE_NOT_FOUND",e}()));e.exports.isValidUTF8=function(e){return e.length<32?i(e):t(e)}}catch(e){}},133:(e,t,s)=>{const r=s(361),o=s(685),{Duplex:i}=s(781),{createHash:n}=s(113),a=s(769),c=s(984),h=s(873),l=s(545),{GUID:d,kWebSocket:f}=s(197),S=/^[+/0-9A-Za-z]{22}==$/;function u(e){e._state=2,e.emit("close")}function _(){this.destroy()}function C(e,t,s,r){s=s||o.STATUS_CODES[t],r={Connection:"close","Content-Type":"text/html","Content-Length":Buffer.byteLength(s),...r},e.once("finish",e.destroy),e.end(`HTTP/1.1 ${t} ${o.STATUS_CODES[t]}\r\n`+Object.keys(r).map((e=>`${e}: ${r[e]}`)).join("\r\n")+"\r\n\r\n"+s)}function p(e,t,s,r,o,i){if(e.listenerCount("wsClientError")){const r=new Error(o);Error.captureStackTrace(r,p),e.emit("wsClientError",r,s,t)}else C(s,r,o,i)}e.exports=class extends r{constructor(e,t){if(super(),null==(e={allowSynchronousEvents:!0,autoPong:!0,maxPayload:104857600,skipUTF8Validation:!1,perMessageDeflate:!1,handleProtocols:null,clientTracking:!0,verifyClient:null,noServer:!1,backlog:null,server:null,host:null,path:null,port:null,WebSocket:l,...e}).port&&!e.server&&!e.noServer||null!=e.port&&(e.server||e.noServer)||e.server&&e.noServer)throw new TypeError('One and only one of the "port", "server", or "noServer" options must be specified');if(null!=e.port?(this._server=o.createServer(((e,t)=>{const s=o.STATUS_CODES[426];t.writeHead(426,{"Content-Length":s.length,"Content-Type":"text/plain"}),t.end(s)})),this._server.listen(e.port,e.host,e.backlog,t)):e.server&&(this._server=e.server),this._server){const e=this.emit.bind(this,"connection");this._removeListeners=function(e,t){for(const s of Object.keys(t))e.on(s,t[s]);return function(){for(const s of Object.keys(t))e.removeListener(s,t[s])}}(this._server,{listening:this.emit.bind(this,"listening"),error:this.emit.bind(this,"error"),upgrade:(t,s,r)=>{this.handleUpgrade(t,s,r,e)}})}!0===e.perMessageDeflate&&(e.perMessageDeflate={}),e.clientTracking&&(this.clients=new Set,this._shouldEmitClose=!1),this.options=e,this._state=0}address(){if(this.options.noServer)throw new Error('The server is operating in "noServer" mode');return this._server?this._server.address():null}close(e){if(2===this._state)return e&&this.once("close",(()=>{e(new Error("The server is not running"))})),void process.nextTick(u,this);if(e&&this.once("close",e),1!==this._state)if(this._state=1,this.options.noServer||this.options.server)this._server&&(this._removeListeners(),this._removeListeners=this._server=null),this.clients&&this.clients.size?this._shouldEmitClose=!0:process.nextTick(u,this);else{const e=this._server;this._removeListeners(),this._removeListeners=this._server=null,e.close((()=>{u(this)}))}}shouldHandle(e){if(this.options.path){const t=e.url.indexOf("?");if((-1!==t?e.url.slice(0,t):e.url)!==this.options.path)return!1}return!0}handleUpgrade(e,t,s,r){t.on("error",_);const o=e.headers["sec-websocket-key"],i=e.headers.upgrade,n=+e.headers["sec-websocket-version"];if("GET"!==e.method)return void p(this,e,t,405,"Invalid HTTP method");if(void 0===i||"websocket"!==i.toLowerCase())return void p(this,e,t,400,"Invalid Upgrade header");if(void 0===o||!S.test(o))return void p(this,e,t,400,"Missing or invalid Sec-WebSocket-Key header");if(13!==n&&8!==n)return void p(this,e,t,400,"Missing or invalid Sec-WebSocket-Version header",{"Sec-WebSocket-Version":"13, 8"});if(!this.shouldHandle(e))return void C(t,400);const l=e.headers["sec-websocket-protocol"];let d=new Set;if(void 0!==l)try{d=h.parse(l)}catch(s){return void p(this,e,t,400,"Invalid Sec-WebSocket-Protocol header")}const f=e.headers["sec-websocket-extensions"],u={};if(this.options.perMessageDeflate&&void 0!==f){const s=new c(this.options.perMessageDeflate,!0,this.options.maxPayload);try{const e=a.parse(f);e[c.extensionName]&&(s.accept(e[c.extensionName]),u[c.extensionName]=s)}catch(s){return void p(this,e,t,400,"Invalid or unacceptable Sec-WebSocket-Extensions header")}}if(this.options.verifyClient){const i={origin:e.headers[8===n?"sec-websocket-origin":"origin"],secure:!(!e.socket.authorized&&!e.socket.encrypted),req:e};if(2===this.options.verifyClient.length)return void this.options.verifyClient(i,((i,n,a,c)=>{if(!i)return C(t,n||401,a,c);this.completeUpgrade(u,o,d,e,t,s,r)}));if(!this.options.verifyClient(i))return C(t,401)}this.completeUpgrade(u,o,d,e,t,s,r)}completeUpgrade(e,t,s,r,o,i,h){if(!o.readable||!o.writable)return o.destroy();if(o[f])throw new Error("server.handleUpgrade() was called more than once with the same socket, possibly due to a misconfiguration");if(this._state>0)return C(o,503);const l=["HTTP/1.1 101 Switching Protocols","Upgrade: websocket","Connection: Upgrade",`Sec-WebSocket-Accept: ${n("sha1").update(t+d).digest("base64")}`],S=new this.options.WebSocket(null,void 0,this.options);if(s.size){const e=this.options.handleProtocols?this.options.handleProtocols(s,r):s.values().next().value;e&&(l.push(`Sec-WebSocket-Protocol: ${e}`),S._protocol=e)}if(e[c.extensionName]){const t=e[c.extensionName].params,s=a.format({[c.extensionName]:[t]});l.push(`Sec-WebSocket-Extensions: ${s}`),S._extensions=e}this.emit("headers",l,r),o.write(l.concat("\r\n").join("\r\n")),o.removeListener("error",_),S.setSocket(o,i,{allowSynchronousEvents:this.options.allowSynchronousEvents,maxPayload:this.options.maxPayload,skipUTF8Validation:this.options.skipUTF8Validation}),this.clients&&(this.clients.add(S),S.on("close",(()=>{this.clients.delete(S),this._shouldEmitClose&&!this.clients.size&&process.nextTick(u,this)}))),h(S,r)}}},545:(e,t,s)=>{const r=s(361),o=s(687),i=s(685),n=s(808),a=s(404),{randomBytes:c,createHash:h}=s(113),{Duplex:l,Readable:d}=s(781),{URL:f}=s(310),S=s(984),u=s(126),_=s(282),{isBlob:C}=s(767),{BINARY_TYPES:p,EMPTY_BUFFER:T,GUID:m,kForOnEventAttribute:P,kListener:y,kStatusCode:b,kWebSocket:D,NOOP:E}=s(197),{EventTarget:{addEventListener:g,removeEventListener:B}}=s(365),{format:N,parse:v}=s(769),{toBuffer:V}=s(795),M=3e4,L=Symbol("kAborted"),H=[8,13],w=["CONNECTING","OPEN","CLOSING","CLOSED"],A=/^[!#$%&'*+\-.0-9A-Z^_`|a-z~]+$/;class k extends r{constructor(e,t,s){super(),this._binaryType=p[0],this._closeCode=1006,this._closeFrameReceived=!1,this._closeFrameSent=!1,this._closeMessage=T,this._closeTimer=null,this._errorEmitted=!1,this._extensions={},this._paused=!1,this._protocol="",this._readyState=k.CONNECTING,this._receiver=null,this._sender=null,this._socket=null,null!==e?(this._bufferedAmount=0,this._isServer=!1,this._redirects=0,void 0===t?t=[]:Array.isArray(t)||("object"==typeof t&&null!==t?(s=t,t=[]):t=[t]),I(this,e,t,s)):(this._autoPong=s.autoPong,this._isServer=!0)}get binaryType(){return this._binaryType}set binaryType(e){p.includes(e)&&(this._binaryType=e,this._receiver&&(this._receiver._binaryType=e))}get bufferedAmount(){return this._socket?this._socket._writableState.length+this._sender._bufferedBytes:this._bufferedAmount}get extensions(){return Object.keys(this._extensions).join()}get isPaused(){return this._paused}get onclose(){return null}get onerror(){return null}get onopen(){return null}get onmessage(){return null}get protocol(){return this._protocol}get readyState(){return this._readyState}get url(){return this._url}setSocket(e,t,s){const r=new u({allowSynchronousEvents:s.allowSynchronousEvents,binaryType:this.binaryType,extensions:this._extensions,isServer:this._isServer,maxPayload:s.maxPayload,skipUTF8Validation:s.skipUTF8Validation}),o=new _(e,this._extensions,s.generateMask);this._receiver=r,this._sender=o,this._socket=e,r[D]=this,o[D]=this,e[D]=this,r.on("conclude",W),r.on("drain",U),r.on("error",K),r.on("message",j),r.on("ping",$),r.on("pong",q),o.onerror=Y,e.setTimeout&&e.setTimeout(0),e.setNoDelay&&e.setNoDelay(),t.length>0&&e.unshift(t),e.on("close",z),e.on("data",Z),e.on("end",ee),e.on("error",te),this._readyState=k.OPEN,this.emit("open")}emitClose(){if(!this._socket)return this._readyState=k.CLOSED,void this.emit("close",this._closeCode,this._closeMessage);this._extensions[S.extensionName]&&this._extensions[S.extensionName].cleanup(),this._receiver.removeAllListeners(),this._readyState=k.CLOSED,this.emit("close",this._closeCode,this._closeMessage)}close(e,t){if(this.readyState!==k.CLOSED)if(this.readyState!==k.CONNECTING)this.readyState!==k.CLOSING?(this._readyState=k.CLOSING,this._sender.close(e,t,!this._isServer,(e=>{e||(this._closeFrameSent=!0,(this._closeFrameReceived||this._receiver._writableState.errorEmitted)&&this._socket.end())})),J(this)):this._closeFrameSent&&(this._closeFrameReceived||this._receiver._writableState.errorEmitted)&&this._socket.end();else{const e="WebSocket was closed before the connection was established";R(this,this._req,e)}}pause(){this.readyState!==k.CONNECTING&&this.readyState!==k.CLOSED&&(this._paused=!0,this._socket.pause())}ping(e,t,s){if(this.readyState===k.CONNECTING)throw new Error("WebSocket is not open: readyState 0 (CONNECTING)");"function"==typeof e?(s=e,e=t=void 0):"function"==typeof t&&(s=t,t=void 0),"number"==typeof e&&(e=e.toString()),this.readyState===k.OPEN?(void 0===t&&(t=!this._isServer),this._sender.ping(e||T,t,s)):F(this,e,s)}pong(e,t,s){if(this.readyState===k.CONNECTING)throw new Error("WebSocket is not open: readyState 0 (CONNECTING)");"function"==typeof e?(s=e,e=t=void 0):"function"==typeof t&&(s=t,t=void 0),"number"==typeof e&&(e=e.toString()),this.readyState===k.OPEN?(void 0===t&&(t=!this._isServer),this._sender.pong(e||T,t,s)):F(this,e,s)}resume(){this.readyState!==k.CONNECTING&&this.readyState!==k.CLOSED&&(this._paused=!1,this._receiver._writableState.needDrain||this._socket.resume())}send(e,t,s){if(this.readyState===k.CONNECTING)throw new Error("WebSocket is not open: readyState 0 (CONNECTING)");if("function"==typeof t&&(s=t,t={}),"number"==typeof e&&(e=e.toString()),this.readyState!==k.OPEN)return void F(this,e,s);const r={binary:"string"!=typeof e,mask:!this._isServer,compress:!0,fin:!0,...t};this._extensions[S.extensionName]||(r.compress=!1),this._sender.send(e||T,r,s)}terminate(){if(this.readyState!==k.CLOSED)if(this.readyState!==k.CONNECTING)this._socket&&(this._readyState=k.CLOSING,this._socket.destroy());else{const e="WebSocket was closed before the connection was established";R(this,this._req,e)}}}function I(e,t,s,r){const n={allowSynchronousEvents:!0,autoPong:!0,protocolVersion:H[1],maxPayload:104857600,skipUTF8Validation:!1,perMessageDeflate:!0,followRedirects:!1,maxRedirects:10,...r,socketPath:void 0,hostname:void 0,protocol:void 0,timeout:void 0,method:"GET",host:void 0,path:void 0,port:void 0};if(e._autoPong=n.autoPong,!H.includes(n.protocolVersion))throw new RangeError(`Unsupported protocol version: ${n.protocolVersion} (supported versions: ${H.join(", ")})`);let a;if(t instanceof f)a=t;else try{a=new f(t)}catch(e){throw new SyntaxError(`Invalid URL: ${t}`)}"http:"===a.protocol?a.protocol="ws:":"https:"===a.protocol&&(a.protocol="wss:"),e._url=a.href;const l="wss:"===a.protocol,d="ws+unix:"===a.protocol;let u;if("ws:"===a.protocol||l||d?d&&!a.pathname?u="The URL's pathname is empty":a.hash&&(u="The URL contains a fragment identifier"):u='The URL\'s protocol must be one of "ws:", "wss:", "http:", "https:", or "ws+unix:"',u){const t=new SyntaxError(u);if(0===e._redirects)throw t;return void G(e,t)}const _=l?443:80,C=c(16).toString("base64"),p=l?o.request:i.request,T=new Set;let P,y;if(n.createConnection=n.createConnection||(l?O:x),n.defaultPort=n.defaultPort||_,n.port=a.port||_,n.host=a.hostname.startsWith("[")?a.hostname.slice(1,-1):a.hostname,n.headers={...n.headers,"Sec-WebSocket-Version":n.protocolVersion,"Sec-WebSocket-Key":C,Connection:"Upgrade",Upgrade:"websocket"},n.path=a.pathname+a.search,n.timeout=n.handshakeTimeout,n.perMessageDeflate&&(P=new S(!0!==n.perMessageDeflate?n.perMessageDeflate:{},!1,n.maxPayload),n.headers["Sec-WebSocket-Extensions"]=N({[S.extensionName]:P.offer()})),s.length){for(const e of s){if("string"!=typeof e||!A.test(e)||T.has(e))throw new SyntaxError("An invalid or duplicated subprotocol was specified");T.add(e)}n.headers["Sec-WebSocket-Protocol"]=s.join(",")}if(n.origin&&(n.protocolVersion<13?n.headers["Sec-WebSocket-Origin"]=n.origin:n.headers.Origin=n.origin),(a.username||a.password)&&(n.auth=`${a.username}:${a.password}`),d){const e=n.path.split(":");n.socketPath=e[0],n.path=e[1]}if(n.followRedirects){if(0===e._redirects){e._originalIpc=d,e._originalSecure=l,e._originalHostOrSocketPath=d?n.socketPath:a.host;const t=r&&r.headers;if(r={...r,headers:{}},t)for(const[e,s]of Object.entries(t))r.headers[e.toLowerCase()]=s}else if(0===e.listenerCount("redirect")){const t=d?!!e._originalIpc&&n.socketPath===e._originalHostOrSocketPath:!e._originalIpc&&a.host===e._originalHostOrSocketPath;(!t||e._originalSecure&&!l)&&(delete n.headers.authorization,delete n.headers.cookie,t||delete n.headers.host,n.auth=void 0)}n.auth&&!r.headers.authorization&&(r.headers.authorization="Basic "+Buffer.from(n.auth).toString("base64")),y=e._req=p(n),e._redirects&&e.emit("redirect",e.url,y)}else y=e._req=p(n);n.timeout&&y.on("timeout",(()=>{R(e,y,"Opening handshake has timed out")})),y.on("error",(t=>{null===y||y[L]||(y=e._req=null,G(e,t))})),y.on("response",(o=>{const i=o.headers.location,a=o.statusCode;if(i&&n.followRedirects&&a>=300&&a<400){if(++e._redirects>n.maxRedirects)return void R(e,y,"Maximum redirects exceeded");let o;y.abort();try{o=new f(i,t)}catch(t){const s=new SyntaxError(`Invalid URL: ${i}`);return void G(e,s)}I(e,o,s,r)}else e.emit("unexpected-response",y,o)||R(e,y,`Unexpected server response: ${o.statusCode}`)})),y.on("upgrade",((t,s,r)=>{if(e.emit("upgrade",t),e.readyState!==k.CONNECTING)return;y=e._req=null;const o=t.headers.upgrade;if(void 0===o||"websocket"!==o.toLowerCase())return void R(e,s,"Invalid Upgrade header");const i=h("sha1").update(C+m).digest("base64");if(t.headers["sec-websocket-accept"]!==i)return void R(e,s,"Invalid Sec-WebSocket-Accept header");const a=t.headers["sec-websocket-protocol"];let c;if(void 0!==a?T.size?T.has(a)||(c="Server sent an invalid subprotocol"):c="Server sent a subprotocol but none was requested":T.size&&(c="Server sent no subprotocol"),c)return void R(e,s,c);a&&(e._protocol=a);const l=t.headers["sec-websocket-extensions"];if(void 0!==l){if(!P)return void R(e,s,"Server sent a Sec-WebSocket-Extensions header but no extension was requested");let t;try{t=v(l)}catch(t){return void R(e,s,"Invalid Sec-WebSocket-Extensions header")}const r=Object.keys(t);if(1!==r.length||r[0]!==S.extensionName)return void R(e,s,"Server indicated an extension that was not requested");try{P.accept(t[S.extensionName])}catch(t){return void R(e,s,"Invalid Sec-WebSocket-Extensions header")}e._extensions[S.extensionName]=P}e.setSocket(s,r,{allowSynchronousEvents:n.allowSynchronousEvents,generateMask:n.generateMask,maxPayload:n.maxPayload,skipUTF8Validation:n.skipUTF8Validation})})),n.finishRequest?n.finishRequest(y,e):y.end()}function G(e,t){e._readyState=k.CLOSING,e._errorEmitted=!0,e.emit("error",t),e.emitClose()}function x(e){return e.path=e.socketPath,n.connect(e)}function O(e){return e.path=void 0,e.servername||""===e.servername||(e.servername=n.isIP(e.host)?"":e.host),a.connect(e)}function R(e,t,s){e._readyState=k.CLOSING;const r=new Error(s);Error.captureStackTrace(r,R),t.setHeader?(t[L]=!0,t.abort(),t.socket&&!t.socket.destroyed&&t.socket.destroy(),process.nextTick(G,e,r)):(t.destroy(r),t.once("error",e.emit.bind(e,"error")),t.once("close",e.emitClose.bind(e)))}function F(e,t,s){if(t){const s=C(t)?t.size:V(t).length;e._socket?e._sender._bufferedBytes+=s:e._bufferedAmount+=s}if(s){const t=new Error(`WebSocket is not open: readyState ${e.readyState} (${w[e.readyState]})`);process.nextTick(s,t)}}function W(e,t){const s=this[D];s._closeFrameReceived=!0,s._closeMessage=t,s._closeCode=e,void 0!==s._socket[D]&&(s._socket.removeListener("data",Z),process.nextTick(Q,s._socket),1005===e?s.close():s.close(e,t))}function U(){const e=this[D];e.isPaused||e._socket.resume()}function K(e){const t=this[D];void 0!==t._socket[D]&&(t._socket.removeListener("data",Z),process.nextTick(Q,t._socket),t.close(e[b])),t._errorEmitted||(t._errorEmitted=!0,t.emit("error",e))}function X(){this[D].emitClose()}function j(e,t){this[D].emit("message",e,t)}function $(e){const t=this[D];t._autoPong&&t.pong(e,!this._isServer,E),t.emit("ping",e)}function q(e){this[D].emit("pong",e)}function Q(e){e.resume()}function Y(e){const t=this[D];t.readyState!==k.CLOSED&&(t.readyState===k.OPEN&&(t._readyState=k.CLOSING,J(t)),this._socket.end(),t._errorEmitted||(t._errorEmitted=!0,t.emit("error",e)))}function J(e){e._closeTimer=setTimeout(e._socket.destroy.bind(e._socket),M)}function z(){const e=this[D];let t;this.removeListener("close",z),this.removeListener("data",Z),this.removeListener("end",ee),e._readyState=k.CLOSING,this._readableState.endEmitted||e._closeFrameReceived||e._receiver._writableState.errorEmitted||null===(t=e._socket.read())||e._receiver.write(t),e._receiver.end(),this[D]=void 0,clearTimeout(e._closeTimer),e._receiver._writableState.finished||e._receiver._writableState.errorEmitted?e.emitClose():(e._receiver.on("error",X),e._receiver.on("finish",X))}function Z(e){this[D]._receiver.write(e)||this.pause()}function ee(){const e=this[D];e._readyState=k.CLOSING,e._receiver.end(),this.end()}function te(){const e=this[D];this.removeListener("error",te),this.on("error",E),e&&(e._readyState=k.CLOSING,this.destroy())}Object.defineProperty(k,"CONNECTING",{enumerable:!0,value:w.indexOf("CONNECTING")}),Object.defineProperty(k.prototype,"CONNECTING",{enumerable:!0,value:w.indexOf("CONNECTING")}),Object.defineProperty(k,"OPEN",{enumerable:!0,value:w.indexOf("OPEN")}),Object.defineProperty(k.prototype,"OPEN",{enumerable:!0,value:w.indexOf("OPEN")}),Object.defineProperty(k,"CLOSING",{enumerable:!0,value:w.indexOf("CLOSING")}),Object.defineProperty(k.prototype,"CLOSING",{enumerable:!0,value:w.indexOf("CLOSING")}),Object.defineProperty(k,"CLOSED",{enumerable:!0,value:w.indexOf("CLOSED")}),Object.defineProperty(k.prototype,"CLOSED",{enumerable:!0,value:w.indexOf("CLOSED")}),["binaryType","bufferedAmount","extensions","isPaused","protocol","readyState","url"].forEach((e=>{Object.defineProperty(k.prototype,e,{enumerable:!0})})),["open","error","close","message"].forEach((e=>{Object.defineProperty(k.prototype,`on${e}`,{enumerable:!0,get(){for(const t of this.listeners(e))if(t[P])return t[y];return null},set(t){for(const t of this.listeners(e))if(t[P]){this.removeListener(e,t);break}"function"==typeof t&&this.addEventListener(e,t,{[P]:!0})}})})),k.prototype.addEventListener=g,k.prototype.removeEventListener=B,e.exports=k},300:e=>{e.exports=require("buffer")},113:e=>{e.exports=require("crypto")},361:e=>{e.exports=require("events")},685:e=>{e.exports=require("http")},687:e=>{e.exports=require("https")},808:e=>{e.exports=require("net")},781:e=>{e.exports=require("stream")},404:e=>{e.exports=require("tls")},310:e=>{e.exports=require("url")},796:e=>{e.exports=require("zlib")}},t={};function s(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,s),i.exports}(()=>{s(254),s(126),s(282);var e=s(545);s(133);const t=e,r=require("fs");let o=null;function i(e){return e.getFullYear().toString().slice(-2)+(e.getMonth()+1).toString().padStart(2,"0")}function n(e){const t=new Date(e);let s=t.getMonth()+1;return s>11&&(s=0,t.setFullYear(t.getFullYear()+1)),t.setMonth(s,1),t}function a(e){const t=e.getFullYear(),s=e.getMonth()+1;return`41I1${["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","J","K","L","M","N","P","Q","R","S","T","V","W"][t-2010]}${s<=9?String(s):String.fromCharCode(55+s)}000`}const c={};function h(){o=new t("wss://iboard-pushstream.ssi.com.vn/realtime"),o.on("open",(function(){console.log("WebSocket connection established"),o.send('{"type":"sub","topic":"systemStatusChangedV2"}'),o.send('{"type":"init"}');var e='["AAA", "AAM", "AAT", "ABR", "ABS", "ABT", "ACB", "ACC", "ACG", "ACL", "ADG", "ADP", "ADS", "AGG", "AGM", "AGR", "ANV", "APG", "APH", "ASG", "ASM", "ASP", "AST", "BAF", "BBC", "BCE", "BCG", "BCM", "BFC", "BHN", "BIC", "BID", "BKG", "BMC", "BMI", "BMP", "BRC", "BSI", "BSR", "BTP", "BTT", "BVH", "BWE", "C32", "C47", "CCI", "CCL", "CDC", "CHP", "CIG", "CII", "CKG", "CLC", "CLL", "CLW", "CMG", "CMV", "CMX", "CNG", "COM", "CRC", "CRE", "CSM", "CSV", "CTD", "CTF", "CTG", "CTI", "CTR", "CTS", "CVT", "D2D", "DAH", "DAT", "DBC", "DBD", "DBT", "DC4", "DCL", "DCM", "DGC", "DGW", "DHA", "DHC", "DHG", "DHM", "DIG", "DLG", "DMC", "DPG", "DPM", "DPR", "DQC", "DRC", "DRH", "DRL", "DSC", "DSE", "DSN", "DTA", "DTL", "DTT", "DVP", "DXG", "DXS", "DXV", "EIB", "ELC", "EVE", "EVF", "EVG", "FCM", "FCN", "FDC", "FIR", "FIT", "FMC", "FPT", "FRT", "FTS", "FUCTVGF3", "FUCTVGF4", "FUCTVGF5", "FUCVREIT", "GAS", "GDT", "GEE", "GEG", "GEX", "GIL", "GMD", "GMH", "GSP", "GTA", "GVR", "HAG", "HAH", "HAP", "HAR", "HAS", "HAX", "HCD", "HCM", "HDB", "HDC", "HDG", "HHP", "HHS", "HHV", "HID", "HII", "HMC", "HNA", "HPG", "HPX", "HQC", "HRC", "HSG", "HSL", "HT1", "HTG", "HTI", "HTL", "HTN", "HTV", "HU1", "HUB", "HVH", "HVN", "HVX", "ICT", "IDI", "IJC", "ILB", "IMP", "ITC", "ITD", "JVC", "KBC", "KDC", "KDH", "KHG", "KHP", "KMR", "KOS", "KPF", "KSB", "L10", "LAF", "LBM", "LCG", "LDG", "LEC", "LGC", "LGL", "LHG", "LIX", "LM8", "LPB", "LSS", "MBB", "MCM", "MCP", "MDG", "MHC", "MIG", "MSB", "MSH", "MSN", "MWG", "NAB", "NAF", "NAV", "NBB", "NCT", "NHA", "NHH", "NHT", "NKG", "NLG", "NNC", "NO1", "NSC", "NT2", "NTL", "NVL", "NVT", "OCB", "OGC", "OPC", "ORS", "PAC", "PAN", "PC1", "PDN", "PDR", "PET", "PGC", "PGD", "PGI", "PGV", "PHC", "PHR", "PIT", "PJT", "PLP", "PLX", "PMG", "PNC", "PNJ", "POW", "PPC", "PSH", "PTB", "PTC", "PTL", "PVD", "PVP", "PVT", "QCG", "QNP", "RAL", "RDP", "REE", "RYG", "S4A", "SAB", "SAM", "SAV", "SBA", "SBG", "SBT", "SBV", "SC5", "SCR", "SCS", "SFC", "SFG", "SFI", "SGN", "SGR", "SGT", "SHA", "SHB", "SHI", "SHP", "SIP", "SJD", "SJS", "SKG", "SMA", "SMB", "SMC", "SPM", "SRC", "SRF", "SSB", "SSC", "SSI", "ST8", "STB", "STG", "STK", "SVC", "SVD", "SVI", "SVT", "SZC", "SZL", "TBC", "TCB", "TCD", "TCH", "TCI", "TCL", "TCM", "TCO", "TCR", "TCT", "TDC", "TDG", "TDH", "TDM", "TDP", "TDW", "TEG", "THG", "TIP", "TIX", "TLD", "TLG", "TLH", "TMP", "TMS", "TMT", "TN1", "TNC", "TNH", "TNI", "TNT", "TPB", "TPC", "TRA", "TRC", "TSC", "TTA", "TTE", "TTF", "TV2", "TVB", "TVS", "TVT", "TYA", "UIC", "VAF", "VCA", "VCB", "VCF", "VCG", "VCI", "VDP", "VDS", "VFG", "VGC", "VHC", "VHM", "VIB", "VIC", "VID", "VIP", "VIX", "VJC", "VMD", "VND", "VNE", "VNG", "VNL", "VNM", "VNS", "VOS", "VPB", "VPD", "VPG", "VPH", "VPI", "VPS", "VRC", "VRE", "VSC", "VSH", "VSI", "VTB", "VTO", "VTP", "YBM", "YEG", "AAV", "ADC", "ALT", "AMC", "AME", "AMV", "API", "APS", "ARM", "ATS", "BAB", "BAX", "BBS", "BCC", "BCF", "BDB", "BED", "BKC", "BNA", "BPC", "BSC", "BST", "BTS", "BTW", "BVS", "BXH", "C69", "CAG", "CAN", "CAP", "CAR", "CCR", "CDN", "CEO", "CET", "CIA", "CJC", "CKV", "CLH", "CLM", "CMC", "CMS", "CPC", "CSC", "CST", "CTB", "CTP", "CTT", "CVN", "CX8", "D11", "DAD", "DAE", "DC2", "DDG", "DHP", "DHT", "DIH", "DL1", "DNC", "DNP", "DP3", "DS3", "DST", "DTC", "DTD", "DTG", "DTK", "DVM", "DXP", "EBS", "ECI", "EID", "EVS", "FID", "GDW", "GIC", "GKM", "GLT", "GMA", "GMX", "HAD", "HAT", "HBS", "HCC", "HCT", "HDA", "HEV", "HGM", "HHC", "HJS", "HKT", "HLC", "HLD", "HMH", "HMR", "HOM", "HTC", "HUT", "HVT", "ICG", "IDC", "IDJ", "IDV", "INC", "INN", "IPA", "ITQ", "IVS", "KDM", "KHS", "KKC", "KMT", "KSD", "KSF", "KSQ", "KST", "KSV", "KTS", "L14", "L18", "L40", "LAS", "LBE", "LCD", "LDP", "LHC", "LIG", "MAC", "MAS", "MBG", "MBS", "MCC", "MCF", "MCO", "MDC", "MED", "MEL", "MKV", "MST", "MVB", "NAG", "NAP", "NBC", "NBP", "NBW", "NDN", "NDX", "NET", "NFC", "NHC", "NRC", "NSH", "NST", "NTH", "NTP", "NVB", "OCH", "ONE", "PBP", "PCE", "PCG", "PCH", "PCT", "PDB", "PEN", "PGN", "PGS", "PGT", "PHN", "PIA", "PIC", "PJC", "PLC", "PMB", "PMC", "PMP", "PMS", "POT", "PPE", "PPP", "PPS", "PPT", "PPY", "PRC", "PRE", "PSC", "PSD", "PSE", "PSI", "PSW", "PTD", "PTI", "PTS", "PTX", "PV2", "PVB", "PVC", "PVG", "PVI", "PVS", "QHD", "QST", "QTC", "RCL", "S55", "S99", "SAF", "SCG", "SCI", "SD5", "SD9", "SDA", "SDC", "SDG", "SDN", "SDU", "SEB", "SED", "SFN", "SGC", "SGD", "SGH", "SHE", "SHN", "SHS", "SJ1", "SJE", "SLS", "SMN", "SMT", "SPC", "SPI", "SRA", "SSM", "STC", "STP", "SVN", "SZB", "TA9", "TBX", "TDT", "TET", "TFC", "THB", "THD", "THS", "THT", "TIG", "TJC", "TKU", "TMB", "TMC", "TMX", "TNG", "TOT", "TPH", "TPP", "TSB", "TTC", "TTH", "TTL", "TTT", "TV3", "TV4", "TVC", "TVD", "TXM", "UNI", "V12", "V21", "VBC", "VC1", "VC2", "VC3", "VC6", "VC7", "VC9", "VCC", "VCM", "VCS", "VDL", "VE1", "VE3", "VE4", "VE8", "VFS", "VGP", "VGS", "VHE", "VHL", "VIF", "VIG", "VIT", "VLA", "VMC", "VMS", "VNC", "VNF", "VNR", "VNT", "VSA", "VSM", "VTC", "VTH", "VTJ", "VTV", "VTZ", "WCS", "WSS", "X20", "A32", "AAH", "AAS", "ABB", "ABC", "ABI", "ABW", "ACE", "ACM", "ACS", "ACV", "AFX", "AG1", "AGF", "AGP", "AGX", "AIC", "AIG", "ALV", "AMD", "AMP", "AMS", "ANT", "APC", "APF", "APL", "APP", "APT", "ART", "ASA", "ATA", "ATB", "ATG", "AVC", "AVF", "AVG", "BAL", "BBH", "BBM", "BBT", "BCA", "BCB", "BCP", "BCR", "BCV", "BDG", "BDT", "BDW", "BEL", "BGE", "BGW", "BHA", "BHC", "BHG", "BHI", "BHK", "BHP", "BIG", "BII", "BIO", "BLF", "BLI", "BLN", "BLT", "BMD", "BMF", "BMG", "BMJ", "BMK", "BMN", "BMS", "BMV", "BNW", "BOT", "BQB", "BRR", "BRS", "BSA", "BSD", "BSG", "BSH", "BSL", "BSP", "BSQ", "BT1", "BT6", "BTB", "BTD", "BTG", "BTH", "BTN", "BTU", "BTV", "BVB", "BVG", "BVL", "BVN", "BWA", "BWS", "C12", "C21", "C22", "C4G", "C92", "CAD", "CAT", "CBI", "CBS", "CC1", "CC4", "CCA", "CCC", "CCM", "CCP", "CCT", "CCV", "CDG", "CDH", "CDO", "CDP", "CDR", "CEG", "CEN", "CFM", "CFV", "CGV", "CH5", "CHC", "CHS", "CI5", "CID", "CIP", "CK8", "CKA", "CKD", "CLG", "CLX", "CMD", "CMF", "CMI", "CMK", "CMM", "CMN", "CMP", "CMT", "CMW", "CNA", "CNC", "CNN", "CNT", "CPA", "CPH", "CPI", "CQN", "CQT", "CSI", "CT3", "CT6", "CTA", "CTN", "CTW", "CTX", "CYC", "DAC", "DAG", "DAN", "DAS", "DBM", "DC1", "DCF", "DCG", "DCH", "DCR", "DCS", "DCT", "DDB", "DDH", "DDM", "DDN", "DDV", "DFC", "DFF", "DGT", "DHB", "DHD", "DHN", "DIC", "DID", "DKC", "DKW", "DLD", "DLR", "DLT", "DM7", "DMN", "DMS", "DNA", "DND", "DNE", "DNH", "DNL", "DNM", "DNN", "DNT", "DNW", "DOC", "DOP", "DP1", "DP2", "DPC", "DPH", "DPP", "DPS", "DRG", "DRI", "DSD", "DSG", "DSP", "DTB", "DTE", "DTH", "DTI", "DTP", "DUS", "DVC", "DVG", "DVN", "DVW", "DWC", "DWS", "DXL", "DZM", "E12", "E29", "ECO", "EFI", "EIC", "EIN", "EME", "EMG", "EMS", "EPC", "EPH", "FBA", "FBC", "FCC", "FCS", "FGL", "FHN", "FHS", "FIC", "FLC", "FOC", "FOX", "FRC", "FRM", "FSO", "FT1", "FTI", "FTM", "G20", "G36", "GAB", "GCB", "GCF", "GDA", "GER", "GGG", "GH3", "GHC", "GLC", "GLW", "GMC", "GND", "GPC", "GSM", "GTD", "GTS", "GTT", "GVT", "H11", "HAC", "HAF", "HAI", "HAM", "HAN", "HAV", "HBC", "HBD", "HBH", "HC1", "HC3", "HCB", "HCI", "HD2", "HD6", "HD8", "HDM", "HDO", "HDP", "HDS", "HDW", "HEC", "HEJ", "HEP", "HES", "HFB", "HFC", "HFX", "HGT", "HHG", "HHN", "HIG", "HIO", "HJC", "HKB", "HLA", "HLB", "HLO", "HLS", "HLT", "HLY", "HMD", "HMG", "HMS", "HNB", "HND", "HNF", "HNG", "HNI", "HNM", "HNP", "HNR", "HOT", "HPB", "HPD", "HPH", "HPI", "HPM", "HPP", "HPT", "HPW", "HRB", "HSA", "HSI", "HSM", "HSP", "HSV", "HTE", "HTM", "HTP", "HTT", "HU3", "HU4", "HU6", "HUG", "HVA", "HVG", "HWS", "IBC", "IBD", "ICC", "ICF", "ICI", "ICN", "IDP", "IFS", "IHK", "ILA", "ILC", "ILS", "IME", "IN4", "ING", "IRC", "ISG", "ISH", "IST", "ITA", "ITS", "JOS", "KAC", "KCB", "KCE", "KGM", "KHD", "KHL", "KHW", "KIP", "KLB", "KLF", "KSH", "KTC", "KTL", "KTT", "KVC", "KWA", "L12", "L35", "L43", "L44", "L45", "L61", "L62", "L63", "LAI", "LAW", "LCC", "LCM", "LCS", "LDW", "LG9", "LGM", "LIC", "LKW", "LLM", "LM3", "LM7", "LMC", "LMH", "LMI", "LNC", "LO5", "LPT", "LQN", "LSG", "LTC", "LTG", "LUT", "M10", "MA1", "MBN", "MCG", "MCH", "MDA", "MDF", "MEC", "MEF", "MES", "MFS", "MGC", "MGG", "MGR", "MH3", "MHL", "MIE", "MIM", "MKP", "MLC", "MLS", "MML", "MNB", "MND", "MPC", "MPT", "MPY", "MQB", "MQN", "MRF", "MSR", "MTA", "MTB", "MTC", "MTG", "MTH", "MTL", "MTP", "MTS", "MTV", "MTX", "MVC", "MVN", "MZG", "NAC", "NAS", "NAU", "NAW", "NBE", "NBT", "NCG", "NCS", "ND2", "NDC", "NDF", "NDP", "NDT", "NDW", "NED", "NEM", "NGC", "NHP", "NHV", "NJC", "NLS", "NNT", "NOS", "NQB", "NQN", "NQT", "NS2", "NSG", "NSL", "NSS", "NTB", "NTC", "NTF", "NTT", "NTW", "NUE", "NVP", "NWT", "NXT", "ODE", "OIL", "ONW", "PAI", "PAP", "PAS", "PAT", "PBC", "PBT", "PCC", "PCF", "PCM", "PDC", "PDV", "PEC", "PEG", "PEQ", "PFL", "PGB", "PHH", "PHP", "PHS", "PID", "PIS", "PIV", "PJS", "PLA", "PLE", "PLO", "PMJ", "PMT", "PMW", "PND", "PNG", "PNP", "PNT", "POB", "POM", "POS", "POV", "PPH", "PPI", "PQN", "PRO", "PRT", "PSB", "PSG", "PSL", "PSN", "PSP", "PTE", "PTG", "PTH", "PTO", "PTP", "PTT", "PTV", "PVA", "PVE", "PVH", "PVL", "PVM", "PVO", "PVR", "PVV", "PVX", "PVY", "PWA", "PWS", "PX1", "PXA", "PXC", "PXI", "PXL", "PXM", "PXS", "PXT", "QBS", "QCC", "QHW", "QNC", "QNS", "QNT", "QNU", "QNW", "QPH", "QSP", "QTP", "RAT", "RBC", "RCC", "RCD", "RIC", "RTB", "S12", "S27", "S72", "S74", "S96", "SAC", "SAL", "SAP", "SAS", "SB1", "SBB", "SBD", "SBH", "SBL", "SBM", "SBR", "SBS", "SCC", "SCD", "SCJ", "SCL", "SCO", "SCY", "SD1", "SD2", "SD3", "SD4", "SD6", "SD7", "SD8", "SDB", "SDD", "SDJ", "SDK", "SDP", "SDT", "SDV", "SDX", "SDY", "SEA", "SEP", "SGB", "SGI", "SGP", "SGS", "SHC", "SHG", "SID", "SIG", "SII", "SIV", "SJC", "SJF", "SJG", "SJM", "SKH", "SKN", "SKV", "SNC", "SNZ", "SP2", "SPB", "SPD", "SPH", "SPV", "SQC", "SRB", "SSF", "SSG", "SSH", "SSN", "STH", "STL", "STS", "STT", "STW", "SVG", "SVH", "SWC", "SZE", "SZG", "TA6", "TAB", "TAL", "TAN", "TAR", "TAW", "TB8", "TBD", "TBH", "TBR", "TBT", "TBW", "TCJ", "TCK", "TCW", "TDB", "TDF", "TDS", "TED", "TEL", "TGG", "TGP", "TH1", "THM", "THN", "THP", "THU", "THW", "TID", "TIE", "TIN", "TIS", "TKA", "TKC", "TKG", "TL4", "TLI", "TLP", "TLT", "TMG", "TMW", "TNA", "TNB", "TNM", "TNP", "TNS", "TNV", "TNW", "TOP", "TOS", "TOW", "TPS", "TQN", "TQW", "TR1", "TRS", "TRT", "TS3", "TS4", "TSA", "TSD", "TSG", "TSJ", "TST", "TT6", "TTB", "TTD", "TTG", "TTN", "TTS", "TTZ", "TUG", "TV1", "TV6", "TVA", "TVG", "TVH", "TVM", "TVN", "TW3", "UCT", "UDC", "UDJ", "UDL", "UEM", "UMC", "UPC", "UPH", "USC", "USD", "UXC", "V11", "V15", "VAB", "VAV", "VBB", "VBG", "VBH", "VC5", "VCE", "VCP", "VCR", "VCT", "VCW", "VCX", "VDB", "VDG", "VDN", "VDT", "VE2", "VE9", "VEA", "VEC", "VEF", "VES", "VET", "VFC", "VFR", "VGG", "VGI", "VGL", "VGR", "VGT", "VGV", "VHD", "VHF", "VHG", "VHH", "VIE", "VIH", "VIM", "VIN", "VIR", "VIW", "VKC", "VKP", "VLB", "VLC", "VLF", "VLG", "VLP", "VLW", "VMA", "VMG", "VMK", "VMT", "VNA", "VNB", "VNH", "VNI", "VNP", "VNX", "VNY", "VNZ", "VOC", "VPA", "VPC", "VPR", "VPW", "VQC", "VRG", "VSE", "VSF", "VSG", "VSN", "VST", "VTA", "VTD", "VTE", "VTG", "VTI", "VTK", "VTL", "VTM", "VTQ", "VTR", "VTS", "VTX", "VUA", "VVN", "VVS", "VW3", "VWS", "VXB", "VXP", "VXT", "WSB", "WTC", "X26", "X77", "XDH", "XHC", "XLV", "XMC", "XMD", "XMP", "XPH", "YBC", "YTC"]';c.ss&&c.ss.length>1e3&&(e=JSON.stringify(c.ss)),o.send(`{"type":"sub","topic":"matchedVolByPriceV2","variables":${e}}`),o.send(`{"type":"sub","topic":"leTableAddV2","variables":${e}}`),o.send(`{"type":"sub","topic":"stockRealtimeBySymbolsAndBoards","variables":{"symbols":${e},"boardIds":["MAIN"]},"component":"priceTableEquities"}`),o.send('{"type":"sub","topic":"notifyIndexRealtimeByListV2","variables":["VNINDEX","VN30","HNX30","HNXIndex","VNXALL","HNXUpcomIndex"]}');let s=[i(new Date),i(n(new Date)),i(n(n(new Date)))].map((e=>"VN30F"+e)).map((e=>'"'+e+'"')).join();o.send('{"type":"sub","topic":"stockRealtimeBySymbolsAndBoards","variables":{"symbols":['+s+'],"boardIds":["MAIN"]},"component":"priceTableEquities"}'),o.send('{"type":"sub","topic":"matchedVolByPriceV2","variables":['+s+"]}"),o.send('{"type":"sub","topic":"leTableAddV2","variables":['+s+"]}");let r=function(e=3){let t=new Date,s=[];for(let r=0;r<e;r++)s.push(a(t)),t=n(t);return s=s.map((e=>'"'+e+'"')),s}(3).join();o.send('{"type":"sub","topic":"stockRealtimeBySymbolsAndBoards","variables":{"symbols":['+r+'],"boardIds":["MAIN"]},"component":"priceTableEquities"}'),o.send('{"type":"sub","topic":"matchedVolByPriceV2","variables":['+r+"]}"),o.send('{"type":"sub","topic":"leTableAddV2","variables":['+r+"]}"),setInterval((()=>{o.readyState===t.OPEN&&o.send('{"type":"init"}')}),3e4)})),o.on("message",(function(e){console.log(`Received message: ${e}`),r.appendFile("./websocket/data3"+function(){let e=new Date;return e.getFullYear()+""+(e.getMonth()+1<10?"0"+(e.getMonth()+1):e.getMonth()+1)+(e.getDate()<10?"0"+e.getDate():e.getDate())}()+".txt",Date.now()+"|"+e+"\n",(e=>{e&&console.log(e)}))})),o.on("close",(function(){console.log("WebSocket connection closed"),h()})),o.on("error",(function(e){console.log(`WebSocket error: ${e}`)}))}r.existsSync("./websocket/")||r.mkdirSync("./websocket/");try{Promise.all(["hose","hnx","upcom"].map((e=>fetch(`https://iboard-query.ssi.com.vn/stock/exchange/${e}?boardId=MAIN`,{method:"GET",headers:{accept:"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7","accept-language":"en-US,en;q=0.9",priority:"u=0, i","sec-ch-ua":'"Chromium";v="128", "Not;A=Brand";v="24", "Google Chrome";v="128"',"sec-ch-ua-arch":'"x86"',"sec-ch-ua-bitness":'"64"',"sec-ch-ua-full-version":'"128.0.6613.137"',"sec-ch-ua-full-version-list":'"Chromium";v="128.0.6613.137", "Not;A=Brand";v="24.0.0.0", "Google Chrome";v="128.0.6613.137"',"sec-ch-ua-mobile":"?0","sec-ch-ua-platform":'"Linux"',"sec-ch-ua-platform-version":'"6.8.0"',"sec-fetch-dest":"document","sec-fetch-mode":"navigate","sec-fetch-site":"none","sec-fetch-user":"?1","upgrade-insecure-requests":"1","user-agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.0.0 Safari/537.36",cookie:"_cfuvid=fRXnSZOztDWxtA32l7YHTtxdRmvkoHNDd1s3XI1A.ss-1752481663825-0.0.1.1-604800000; __cf_bm=Jb6z8wBCUF4thBvkKPN17mYNnT0YibWXJHgvYZnsLks-1752503813-1.0.1.1-Srwv5dgmFO95Cqrb3xnpPe1v2K4E4OWvSlvDtoxK2_m68n8BFrR6WGw8oS9r2eOsbq9JYKrB8bTVQanOF_iLt4SVBtojZ82Hx8IU13ptcdI; cf_clearance=T3sI4hzFaKWG6vPZtQV_SVPamsBOcyz7xApOYkpb0Nk-1752503835-1.2.1.1-WH_4z_X3OEsDjD7f_ApqrqAdwMi8ty2IIm2TqXrELxb8CAekEjGYNd6f_gRKHgkanciJrmBfCQDHYDUbfnf6jKrrXrk8Nxh4eSvM9opKteb33JtwuVXgneEVjC8UD7prFUTZXbFDz97LhjnwOW8QbJZopTV7LnBaPxkmwf_FBUuRdDPecFEQSg4YJN6kJ1djPRxatk0Nw3HvLww7wnnTUviXz15d5pwH_ctdhhcmKjE"},referrer:"https://iboard.ssi.com.vn/",referrerPolicy:"strict-origin-when-cross-origin",body:null,mode:"cors",credentials:"include"})))).then((e=>Promise.all(e.map((e=>e.ok?e.json():{}))))).then((e=>{const t=e.map((e=>e.data)).flat().map((e=>e.stockSymbol));c.ss=t,console.log("Done load symbols",t.length),h()})).catch((e=>{console.error(e),h()}))}catch(e){console.log(e),h()}})()})();